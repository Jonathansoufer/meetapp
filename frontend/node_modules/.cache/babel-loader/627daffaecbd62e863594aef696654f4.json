{"ast":null,"code":"import _slicedToArray from \"/Users/jonathanferreira/Downloads/gostack-fullstack-meetapp-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jonathanferreira/Downloads/gostack-fullstack-meetapp-master/frontend/src/components/BannerInput/BannerInput.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\nimport { toast } from 'react-toastify';\nimport { MdAddAPhoto } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { Container } from './BannerInput_Styles';\nexport default function BannerInput() {\n  const _useField = useField('banner'),\n        defaultValue = _useField.defaultValue,\n        registerField = _useField.registerField;\n\n  const _useField2 = useField('banner_id'),\n        error = _useField2.error;\n\n  const _useState = useState(defaultValue && defaultValue.id),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState(defaultValue && defaultValue.url),\n        _useState4 = _slicedToArray(_useState3, 2),\n        preview = _useState4[0],\n        setPreview = _useState4[1];\n\n  const ref = useRef();\n  useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: 'banner_id',\n        ref: ref.current,\n        path: 'dataset.file'\n      });\n    } // eslint-disable-next-line\n\n  }, [ref.current]);\n\n  async function handleChange(e) {\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n\n    try {\n      const response = await api.post('banner', data);\n      const _response$data = response.data,\n            id = _response$data.id,\n            url = _response$data.url;\n      setFile(id);\n      setPreview(url);\n    } catch (err) {\n      toast.error('Internal server error');\n    }\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: preview,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(MdAddAPhoto, {\n    size: 48,\n    color: \"rgba(0, 0, 0, .3)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), defaultValue && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(MdAddAPhoto, {\n    size: 48,\n    color: \"#e65175\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"file\",\n    id: \"banner\",\n    accept: \"image/*\",\n    \"data-file\": file,\n    onChange: handleChange,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, error));\n}","map":{"version":3,"sources":["/Users/jonathanferreira/Downloads/gostack-fullstack-meetapp-master/frontend/src/components/BannerInput/BannerInput.js"],"names":["React","useState","useRef","useEffect","useField","toast","MdAddAPhoto","api","Container","BannerInput","defaultValue","registerField","error","id","file","setFile","url","preview","setPreview","ref","current","name","path","handleChange","e","data","FormData","append","target","files","response","post","err"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\nimport { toast } from 'react-toastify';\n\nimport { MdAddAPhoto } from 'react-icons/md';\n\nimport api from '~/services/api';\n\nimport { Container } from './BannerInput_Styles';\n\nexport default function BannerInput() {\n  const { defaultValue, registerField } = useField('banner');\n  const { error } = useField('banner_id');\n\n  const [file, setFile] = useState(defaultValue && defaultValue.id);\n  const [preview, setPreview] = useState(defaultValue && defaultValue.url);\n\n  const ref = useRef();\n\n  useEffect(() => {\n    if (ref.current) {\n      registerField({\n        name: 'banner_id',\n        ref: ref.current,\n        path: 'dataset.file',\n      });\n    }\n    // eslint-disable-next-line\n  }, [ref.current]);\n\n  async function handleChange(e) {\n    const data = new FormData();\n\n    data.append('file', e.target.files[0]);\n\n    try {\n      const response = await api.post('banner', data);\n\n      const { id, url } = response.data;\n\n      setFile(id);\n      setPreview(url);\n    } catch (err) {\n      toast.error('Internal server error');\n    }\n  }\n\n  return (\n    <Container>\n      <label htmlFor=\"banner\">\n        <img src={preview} alt=\"\" />\n\n        <div>\n          <MdAddAPhoto size={48} color=\"rgba(0, 0, 0, .3)\" />\n        </div>\n\n        {defaultValue && (\n          <div>\n            <MdAddAPhoto size={48} color=\"#e65175\" />\n          </div>\n        )}\n\n        <input\n          type=\"file\"\n          id=\"banner\"\n          accept=\"image/*\"\n          data-file={file}\n          onChange={handleChange}\n          ref={ref}\n        />\n      </label>\n\n      {error && <span>{error}</span>}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}