{"ast":null,"code":"import _slicedToArray from \"/Users/jonathanferreira/Downloads/gostack-fullstack-meetapp-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jonathanferreira/Downloads/gostack-fullstack-meetapp-master/frontend/src/components/DatePicker/index.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport ReactDatePicker from 'react-datepicker';\nimport { useField } from '@rocketseat/unform';\nimport 'react-datepicker/dist/react-datepicker.css';\nexport default function DatePicker({\n  name,\n  placeholder\n}) {\n  const ref = useRef(null);\n\n  const _useField = useField(name),\n        fieldName = _useField.fieldName,\n        registerField = _useField.registerField,\n        defaultValue = _useField.defaultValue,\n        error = _useField.error;\n\n  const _useState = useState(defaultValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        selected = _useState2[0],\n        setSelected = _useState2[1];\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: ref.current,\n      path: 'props.selected',\n      clearValue: pickerRef => {\n        pickerRef.clear();\n      }\n    }); // eslint-disable-next-line\n  }, [ref.current, fieldName]);\n  return React.createElement(React.Fragment, null, React.createElement(ReactDatePicker, {\n    name: fieldName,\n    selected: selected,\n    onChange: date => setSelected(date),\n    minDate: new Date(),\n    showTimeSelect: true,\n    timeFormat: \"HH:mm\",\n    dateFormat: \"dd/MM/yyyy - HH:mm\",\n    ref: ref,\n    placeholderText: placeholder,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, error));\n}","map":{"version":3,"sources":["/Users/jonathanferreira/Downloads/gostack-fullstack-meetapp-master/frontend/src/components/DatePicker/index.js"],"names":["React","useRef","useEffect","useState","ReactDatePicker","useField","DatePicker","name","placeholder","ref","fieldName","registerField","defaultValue","error","selected","setSelected","current","path","clearValue","pickerRef","clear","date","Date"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,4CAAP;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,EAA2C;AACxD,QAAMC,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB;;AADwD,oBAEEI,QAAQ,CAACE,IAAD,CAFV;AAAA,QAEhDG,SAFgD,aAEhDA,SAFgD;AAAA,QAErCC,aAFqC,aAErCA,aAFqC;AAAA,QAEtBC,YAFsB,aAEtBA,YAFsB;AAAA,QAERC,KAFQ,aAERA,KAFQ;;AAAA,oBAGxBV,QAAQ,CAACS,YAAD,CAHgB;AAAA;AAAA,QAGjDE,QAHiD;AAAA,QAGvCC,WAHuC;;AAKxDb,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,aAAa,CAAC;AACZJ,MAAAA,IAAI,EAAEG,SADM;AAEZD,MAAAA,GAAG,EAAEA,GAAG,CAACO,OAFG;AAGZC,MAAAA,IAAI,EAAE,gBAHM;AAIZC,MAAAA,UAAU,EAAEC,SAAS,IAAI;AACvBA,QAAAA,SAAS,CAACC,KAAV;AACD;AANW,KAAD,CAAb,CADc,CASd;AACD,GAVQ,EAUN,CAACX,GAAG,CAACO,OAAL,EAAcN,SAAd,CAVM,CAAT;AAYA,SACE,0CACE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEA,SADR;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAGE,IAAA,QAAQ,EAAEO,IAAI,IAAIN,WAAW,CAACM,IAAD,CAH/B;AAIE,IAAA,OAAO,EAAE,IAAIC,IAAJ,EAJX;AAKE,IAAA,cAAc,MALhB;AAME,IAAA,UAAU,EAAC,OANb;AAOE,IAAA,UAAU,EAAC,oBAPb;AAQE,IAAA,GAAG,EAAEb,GARP;AASE,IAAA,eAAe,EAAED,WATnB;AAUE,IAAA,YAAY,EAAC,KAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaGK,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAP,CAbZ,CADF;AAiBD","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { useField } from '@rocketseat/unform';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport default function DatePicker({ name, placeholder }) {\n  const ref = useRef(null);\n  const { fieldName, registerField, defaultValue, error } = useField(name);\n  const [selected, setSelected] = useState(defaultValue);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: ref.current,\n      path: 'props.selected',\n      clearValue: pickerRef => {\n        pickerRef.clear();\n      },\n    });\n    // eslint-disable-next-line\n  }, [ref.current, fieldName]);\n\n  return (\n    <>\n      <ReactDatePicker\n        name={fieldName}\n        selected={selected}\n        onChange={date => setSelected(date)}\n        minDate={new Date()}\n        showTimeSelect\n        timeFormat=\"HH:mm\"\n        dateFormat=\"dd/MM/yyyy - HH:mm\"\n        ref={ref}\n        placeholderText={placeholder}\n        autoComplete=\"off\"\n      />\n      {error && <span>{error}</span>}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}